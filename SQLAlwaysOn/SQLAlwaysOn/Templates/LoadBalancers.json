{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "apiVersion": {
      "type": "string",
      "metadata": {
        "description": "Schema api version from parent template"
      }
    },
    "deploymentAffix": {
      "type": "string"
    },
    "sqlLBIPAddress": {
      "type": "string"
    },
    "mmqLBIPAddress": {
      "type": "string"
    },
    "TRZSubnetRef": {
      "type": "string"
    },
    "HTTPNAT": {
      "type": "string"
    },
    "PIPArrAddress": {
      "type": "string"
    }
  },
  "variables": {
    "lbSettings": {
      "arrLBFEName": "[concat('BFE', parameters('deploymentAffix'),'ARR001')]",
      "sqlLBFEName": "[concat('BFE', parameters('deploymentAffix'),'SQL001')]",
      "mmqLBFEName": "[concat('BFE', parameters('deploymentAffix'),'MMQ001')]",
      "arrLBBEName": "[concat('BBE', parameters('deploymentAffix'),'ARR001')]",
      "sqlLBBEName": "[concat('BBE', parameters('deploymentAffix'),'SQL001')]",
      "mmqLBBEName": "[concat('BBE', parameters('deploymentAffix'),'MMQ001')]",
      "arrLBName": "[concat('LB', parameters('deploymentAffix'),'ARR001')]",
      "sqlLBName": "[concat('LB', parameters('deploymentAffix'),'SQL001')]",
      "mmqLBName": "[concat('LB', parameters('deploymentAffix'),'MMQ001')]",
      "SQLAOLBProbeName": "[concat('SQLAO', parameters('deploymentAffix'),'LBProbe')]",
      "mmqLBProbeName": "[concat('MSMQ', parameters('deploymentAffix'),'LBProbe')]"
    },
    "ids": {
      "arrLBID": "[resourceId('Microsoft.Network/loadBalancers',variables('lbSettings').arrLBName)]",
      "sqlLBID": "[resourceId('Microsoft.Network/loadBalancers',variables('lbSettings').sqlLBName)]",
      "mmqLBID": "[resourceId('Microsoft.Network/loadBalancers',variables('lbSettings').mmqLBName)]"
    },
    "derivedIds": {
      "sqlLBFEConfigID": "[concat(variables('ids').sqlLBID,'/frontendIPConfigurations/',variables('lbSettings').sqlLBFEName)]",
      "mmqLBFEConfigID": "[concat(variables('ids').mmqLBID,'/frontendIPConfigurations/',variables('lbSettings').mmqLBFEName)]",
      "arrLBFEConfigID": "[concat(variables('ids').arrLBID,'/frontendIPConfigurations/',variables('lbSettings').arrLBFEName)]",
      "arrLBBEAddressPoolID": "[concat(variables('ids').arrLBID,'/backendAddressPools/',variables('lbSettings').arrLBBEName)]",
      "sqlLBBEAddressPoolID": "[concat(variables('ids').sqlLBID,'/backendAddressPools/',variables('lbSettings').sqlLBBEName)]",
      "mmqLBBEAddressPoolID": "[concat(variables('ids').mmqLBID,'/backendAddressPools/',variables('lbSettings').mmqLBBEName)]",
      "arrHTTPNATRuleID": "[concat(variables('ids').arrLBID,'/inboundNatRules/',parameters('HTTPNAT'))]",
      "sqlLBProbeID": "[concat(variables('ids').sqlLBID,'/probes/',variables('lbSettings').SQLAOLBProbeName)]",
      "mmqLBProbeID": "[concat(variables('ids').mmqLBID,'/probes/',variables('lbSettings').mmqLBProbeName)]"
    }
  },
  "resources": [
    {
      "apiVersion": "[parameters('apiVersion')]",
      "location": "[resourceGroup().location]",
      "name": "[variables('lbSettings').sqlLBName]",
      "type": "Microsoft.Network/loadBalancers",
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "[variables('lbSettings').sqlLBFEName]",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[parameters('sqlLBIPAddress')]",
              "subnet": {
                "id": "[parameters('TRZSubnetRef')]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('lbSettings').sqlLBBEName]"
          }
        ],
        "loadBalancingRules": [
          {
            "name": "SQLAlwaysOnEndPointListener",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('derivedIds').sqlLBFEConfigID]"
              },
              "backendAddressPool": {
                "id": "[variables('derivedIds').sqlLBBEAddressPoolID]"
              },
              "probe": {
                "id": "[variables('derivedIds').sqlLBProbeID]"
              },
              "protocol": "Tcp",
              "frontendPort": 1433,
              "backendPort": 1433,
              "enableFloatingIP": true
            }
          }
        ],
        "probes": [
          {
            "name": "[variables('lbSettings').SQLAOLBProbeName]",
            "properties": {
              "protocol": "Tcp",
              "port": 59999,
              "intervalInSeconds": "5",
              "numberOfProbes": "2"
            }
          }
        ]
      }
    }
  ],
  "outputs": {
    "arrLBBEAddressPoolIDResourceId": {
      "type": "string",
      "value": "[variables('derivedIds').arrLBBEAddressPoolID]"
    },
    "arrHTTPNATRuleIDResourceId": {
      "type": "string",
      "value": "[variables('derivedIds').arrHTTPNATRuleID]"
    },
    "sqlLBBEAddressPoolIDResourceId": {
      "type": "string",
      "value": "[variables('derivedIds').sqlLBBEAddressPoolID]"
    },
    "mmqLBBEAddressPoolIDResourceId": {
      "type": "string",
      "value": "[variables('derivedIds').mmqLBBEAddressPoolID]"
    },
    "result": {
      "value": "LoadBalancers Provisioning achieved",
      "type": "string"
    }
  }
}